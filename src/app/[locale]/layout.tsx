import "./globals.css";
import { LocaleType } from "@/i18n/request";
import { DIRECTIONS } from "../../constants/locale";
import {  Outfit } from "next/font/google";
import NextTopLoader from "nextjs-toploader";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { Toaster } from "sonner";
import { ThemeProvider } from "@/providers/theme-provider";
import { Metadata } from "next";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { extractRouterConfig } from "uploadthing/server";
import { ourFileRouter } from "../api/uploadthing/core";
import { connection } from "next/server";
import { Suspense } from "react";
import ReduxProvider from "@/providers/redux-provider";
import { UserStoresProvider } from "@/providers/user-stores-context";
import { AuthProvider } from "@/providers/auth-context-provider";

const FONT_EN = Outfit({
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  subsets: ["latin"],
  preload: true,
});

// const FONT_AR = El_Messiri({
//   weight: ["400", "500", "700", "600"],
//   subsets: ["arabic"],
//   preload: true,
// });

export const metadata: Metadata = {
  title: "Motager",
  description: "Generated by Motager Team",
};

async function UTSSR() {
  await connection();
  return <NextSSRPlugin routerConfig={extractRouterConfig(ourFileRouter)} />;
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: LocaleType }>;
}) {
  const messages = await getMessages();
  const { locale } = await params;

  if (locale === null || locale === undefined) {
    return null;
  }

  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale as LocaleType)) {
    notFound();
  }

  return (
    <html
      suppressHydrationWarning
      lang={locale}
      dir={DIRECTIONS[locale] || "ltr"}
    >
      <body
        suppressHydrationWarning
        className={`${
          FONT_EN.className
        } antialiased`}
      >
        <ReduxProvider>
          <Suspense>
            <UTSSR />
          </Suspense>
          <NextTopLoader
            color="#22c55e"
            initialPosition={0.08}
            height={3}
            showSpinner={false}
            easing="ease"
            shadow="0 0 10px #22c55e,0 0 5px #22c55e"
          />
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <NextIntlClientProvider messages={messages}>
              <AuthProvider>
                <UserStoresProvider>{children}</UserStoresProvider>
              </AuthProvider>
              <Toaster
                richColors
                position={locale === "ar" ? "bottom-left" : "bottom-right"}
              />
            </NextIntlClientProvider>
          </ThemeProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
